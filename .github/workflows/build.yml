name: Build Virtu-ALS
on: 
  push:
    branches:
      - master
env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }} ${{ matrix.customParameters }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
        customParameters: 
          - ""
          - "-EnableHeadlessMode"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: ${{ matrix.customParameters }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}${{ matrix.customParameters }}
          path: build/${{ matrix.targetPlatform }}
          retention-days: 1
  release:
    name: "Create tagged release"
    needs: buildForAllSupportedPlatforms
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts as zip files
      uses: actions/github-script@v6
      with:
        # https://github.com/actions/download-artifact/issues/143
        script: |
          let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.payload.workflow_run.id,
          });
          for (const artifact of allArtifacts.data.artifacts)
          {
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: artifact.id,
              archive_format: 'zip',
            });
            
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/${artifact.name}.zip`, Buffer.from(download.data));
          }
    - uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: "latest"
        title: "Development Build"
        files: |
          *.zip